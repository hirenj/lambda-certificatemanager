{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters" : {
    "AUTH0DOMAIN" : {
      "Type" : "String",
      "Default" : "",
      "Description" : "Auth0 domain for authentication (i.e. just 'example' from a domain of 'example.auth0.com')"
    }
  },
  "Resources": {
    "CertsLogWriterPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties" : {
        "PolicyName" : "CertsLogWriterPolicy",
        "PolicyDocument" : {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "logs:CreateLogGroup",
                  "logs:CreateLogStream",
                  "logs:PutLogEvents"
                ],
                "Resource": "arn:aws:logs:*:*:*"
              }
            ]
        },
        "Roles" : [ { "Ref" : "LambdaRotateCertificatesRole" },{"Ref" : "LambdaUpdateCertificatesRole"} ]
      },
      "DependsOn" : ["LambdaRotateCertificatesRole","LambdaUpdateCertificatesRole"]
    },
    "LambdaUpdateCertificatesRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns" : [ { "Ref" : "WriteCertificatesConfig" }],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        }
      }
    },
    "LambdaRotateCertificatesRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns" : [ {"Ref" : "WriteCertificatesConfig"}, { "Ref" : "UpdateFunctions" } ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        }
      }
    },
    "updateCertificates" : {
      "Type" : "AWS::Lambda::Function",
      "Properties" : {
        "Code" : {
          "ZipFile": { "Fn::Join": ["", [
            "exports.updateCertificates = function(event, context) {",
            "  context.succeed('OK');",
            "};"
          ]]}
        },
        "Description" : "updateCertificates",
        "Handler" : "index.updateCertificates",
        "Environment" : { "Variables" : {
          "AUTH0_DOMAIN" : {"Ref" : "AUTH0DOMAIN"}
        }},
        "Role" : {"Fn::GetAtt" : ["LambdaUpdateCertificatesRole", "Arn"] },
        "Runtime" : "nodejs4.3",
        "MemorySize" : 128,
        "Timeout" : 60
      },
      "DependsOn" : "LambdaUpdateCertificatesRole"
    },
    "rotateCertificates" : {
      "Type" : "AWS::Lambda::Function",
      "Properties" : {
        "Code" : {
          "ZipFile": { "Fn::Join": ["", [
            "exports.rotateCertificates = function(event, context) {",
            "  context.succeed('OK');",
            "};"
          ]]}
        },
        "Description" : "rotateCertificates",
        "Handler" : "index.rotateCertificates",
        "Role" : {"Fn::GetAtt" : ["LambdaRotateCertificatesRole", "Arn"] },
        "Runtime" : "nodejs4.3",
        "MemorySize" : 512,
        "Timeout" : 300
      },
      "DependsOn" : "LambdaRotateCertificatesRole"
    },
    "UpdateFunctions" : {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties" : {
        "Description" : "UpdateFunctions",
        "PolicyDocument" : {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "UpdateFunctions",
              "Effect": "Allow",
              "Action": [
                  "lambda:GetFunction",
                  "lambda:UpdateFunctionCode"
              ],
              "Resource": [
                { "Fn::GetAtt" : ["exchangetoken", "Arn"] },
                { "Fn::GetAtt" : ["datahandler", "Arn"] },
                { "Fn::GetAtt" : ["rdatasethandler", "Arn"] },
                { "Fn::GetAtt" : ["loginhandler", "Arn"] }
              ]
            }
          ]
        }
      }
    },
    "WriteCertificatesConfig" : {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties" : {
        "Description" : "WriteCertificatesConfig",
        "PolicyDocument" : {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "WriteCertificatesConfig",
              "Effect": "Allow",
              "Action": [
                  "s3:PutObject",
                  "s3:GetObject",
                  "s3:PutObjectAcl"
              ],
              "Resource": [
                { "Fn::Join" :  [ "", [ "arn:aws:s3:", ":", ":", { "Ref" : "dataBucket" }, "/conf/authcerts" ] ]},
                { "Fn::Join" :  [ "", [ "arn:aws:s3:", ":", ":", { "Ref" : "dataBucket" }, "/conf/localcerts" ] ]}
              ]
            }
          ]
        }
      }
    },
    "updateCertificatesRule": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Name": { "Fn::Join": [ "" , ["updateCertificatesRule", "-", { "Ref" : "AWS::StackName" } ]]},
        "Description": "updateCertificates triggering event",
        "ScheduleExpression": "rate(12 hours)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "updateCertificates",
                "Arn"
              ]
            },
            "Id": "updateCertificates"
          }
        ]
      }
    },
    "rotateCertificatesRule": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Name": { "Fn::Join": [ "" , ["rotateCertificatesRule", "-", { "Ref" : "AWS::StackName" } ]]},
        "Description": "rotateCertificates triggering event",
        "ScheduleExpression": "rate(6 hours)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "rotateCertificates",
                "Arn"
              ]
            },
            "Id": "rotateCertificates"
          }
        ]
      }
    },
    "LambdaUpdateCertificatesPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName" : { "Fn::GetAtt" : ["updateCertificates", "Arn"] },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn" : {"Fn::Join": ["", [ "arn:aws:events", ":", { "Ref" : "AWS::Region" } , ":", {"Ref" : "AWS::AccountId" }, ":", "rule/updateCertificatesRule", "-", {"Ref" : "AWS::StackName" }]] }
      },
      "Metadata" : {
        "Comment" : "Used to update the pubkeys from auth providers"
      }
    },
    "LambdaRotateCertificatesPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName" : { "Fn::GetAtt" : ["rotateCertificates", "Arn"] },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn" : {"Fn::Join": ["", [ "arn:aws:events", ":", { "Ref" : "AWS::Region" } , ":", {"Ref" : "AWS::AccountId" }, ":", "rule/rotateCertificatesRule", "-", {"Ref" : "AWS::StackName"} ]] }
      },
      "Metadata" : {
        "Comment" : "Used to rotate certificates in deployed lambda functions"
      }
    }

  },
  "Outputs": {
  }
}